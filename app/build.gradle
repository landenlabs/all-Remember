// All-Remember

plugins {
    id ("com.android.application")
    id ("org.jetbrains.kotlin.android") // Prevents duplicate kotlin warnings
}

android {
    compileSdk  34
    namespace "com.landenlabs.all_remember"

    defaultConfig {
        applicationId "com.landenlabs.all_remember"
        minSdkVersion 23
        targetSdkVersion 34

        versionCode 20630
        versionName "2.06.30"

        // Limit languages to following list.
        resourceConfigurations += ['en', 'es']

        buildConfigField "long", "BuildTimeMilli", System.currentTimeMillis() + "L"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    applicationVariants.configureEach { variant ->
        variant.resValue "string", "versionName", "version " + variant.versionName
    }

    signingConfigs {
        release
    }

    // Load signing config (does not work for command line builds)
    // println("Setting release=${rootDir}/release.properties")
    if (file("${rootDir}/release.properties").exists()) {
        def props = new Properties()
        props.load(new FileInputStream(file("${rootDir}/release.properties")))
        android.signingConfigs.release.storeFile = file(props.keyStore)
        android.signingConfigs.release.storePassword = props.keyStorePassword
        android.signingConfigs.release.keyAlias = props.keyAlias
        android.signingConfigs.release.keyPassword = props.keyAliasPassword
        println("Setting release to " + signingConfigs.release.storeFile.absolutePath )
    }

    buildTypes {
        release {
            // Enables code shrinking, obfuscation, and optimization.
            minifyEnabled true

            // List of resources removed at end of generated mapping file:
            // grep unused ./app/build/outputs/mapping/demoRelease/resources.txt
            shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            ndk {
                // abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
                abiFilters 'armeabi-v7a', 'arm64-v8a'
            }
        }
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile).tap {
            configureEach {
                // Enable verbose lint reporting during build.
                options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
            }
        }
    }

    lint {
        abortOnError false
        disable 'DefaultLocale', 'SimpleDateFormat', 'InflateParams', 'SpUsage',
                'UseCompoundDrawables', 'HandlerLeak', 'ViewConstructor', 'SetTextI18n',
                'RtlSymmetry', 'RtlHardcoded', 'ContentDescription',
                'MissingTranslation', 'ValidFragment', 'UnusedAttribute',
                'FieldCanBeLocal', 'LocalSuppress', 'HardcodedText', 'Typos'
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'

    implementation 'androidx.navigation:navigation-fragment:2.7.7'
    implementation 'androidx.navigation:navigation-ui:2.7.7'

    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test:runner:1.6.1"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.6.1"
}

// Rename app
android.applicationVariants.configureEach { variant ->
    variant.outputs.configureEach {
        def ourname = project.parent.name
        outputFileName = "$ourname-${variant.name}-${variant.versionName}.apk"
        println "out name= $outputFileName"
    }
}